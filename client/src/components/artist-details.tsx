import React from 'react';
import { ArtistWithDetails } from '@shared/types';
import { Badge } from './ui/badge';

// Function to get a placeholder value when data is missing
function getPlaceholder(value: any, placeholder: string = 'Unknown'): string {
  return value ? String(value) : placeholder;
}

// Map country codes to flag emojis
const countryFlags: Record<string, string> = {
  'AD': 'ðŸ‡¦ðŸ‡©', 'AE': 'ðŸ‡¦ðŸ‡ª', 'AF': 'ðŸ‡¦ðŸ‡«', 'AG': 'ðŸ‡¦ðŸ‡¬', 'AI': 'ðŸ‡¦ðŸ‡®', 'AL': 'ðŸ‡¦ðŸ‡±', 'AM': 'ðŸ‡¦ðŸ‡²', 'AO': 'ðŸ‡¦ðŸ‡´', 
  'AR': 'ðŸ‡¦ðŸ‡·', 'AS': 'ðŸ‡¦ðŸ‡¸', 'AT': 'ðŸ‡¦ðŸ‡¹', 'AU': 'ðŸ‡¦ðŸ‡º', 'AW': 'ðŸ‡¦ðŸ‡¼', 'AX': 'ðŸ‡¦ðŸ‡½', 'AZ': 'ðŸ‡¦ðŸ‡¿', 'BA': 'ðŸ‡§ðŸ‡¦', 
  'BB': 'ðŸ‡§ðŸ‡§', 'BD': 'ðŸ‡§ðŸ‡©', 'BE': 'ðŸ‡§ðŸ‡ª', 'BF': 'ðŸ‡§ðŸ‡«', 'BG': 'ðŸ‡§ðŸ‡¬', 'BH': 'ðŸ‡§ðŸ‡­', 'BI': 'ðŸ‡§ðŸ‡®', 'BJ': 'ðŸ‡§ðŸ‡¯', 
  'BL': 'ðŸ‡§ðŸ‡±', 'BM': 'ðŸ‡§ðŸ‡²', 'BN': 'ðŸ‡§ðŸ‡³', 'BO': 'ðŸ‡§ðŸ‡´', 'BR': 'ðŸ‡§ðŸ‡·', 'BS': 'ðŸ‡§ðŸ‡¸', 'BT': 'ðŸ‡§ðŸ‡¹', 'BV': 'ðŸ‡§ðŸ‡»', 
  'BW': 'ðŸ‡§ðŸ‡¼', 'BY': 'ðŸ‡§ðŸ‡¾', 'BZ': 'ðŸ‡§ðŸ‡¿', 'CA': 'ðŸ‡¨ðŸ‡¦', 'CC': 'ðŸ‡¨ðŸ‡¨', 'CD': 'ðŸ‡¨ðŸ‡©', 'CF': 'ðŸ‡¨ðŸ‡«', 'CG': 'ðŸ‡¨ðŸ‡¬', 
  'CH': 'ðŸ‡¨ðŸ‡­', 'CI': 'ðŸ‡¨ðŸ‡®', 'CK': 'ðŸ‡¨ðŸ‡°', 'CL': 'ðŸ‡¨ðŸ‡±', 'CM': 'ðŸ‡¨ðŸ‡²', 'CN': 'ðŸ‡¨ðŸ‡³', 'CO': 'ðŸ‡¨ðŸ‡´', 'CR': 'ðŸ‡¨ðŸ‡·', 
  'CU': 'ðŸ‡¨ðŸ‡º', 'CV': 'ðŸ‡¨ðŸ‡»', 'CW': 'ðŸ‡¨ðŸ‡¼', 'CX': 'ðŸ‡¨ðŸ‡½', 'CY': 'ðŸ‡¨ðŸ‡¾', 'CZ': 'ðŸ‡¨ðŸ‡¿', 'DE': 'ðŸ‡©ðŸ‡ª', 'DJ': 'ðŸ‡©ðŸ‡¯', 
  'DK': 'ðŸ‡©ðŸ‡°', 'DM': 'ðŸ‡©ðŸ‡²', 'DO': 'ðŸ‡©ðŸ‡´', 'DZ': 'ðŸ‡©ðŸ‡¿', 'EC': 'ðŸ‡ªðŸ‡¨', 'EE': 'ðŸ‡ªðŸ‡ª', 'EG': 'ðŸ‡ªðŸ‡¬', 'EH': 'ðŸ‡ªðŸ‡­', 
  'ER': 'ðŸ‡ªðŸ‡·', 'ES': 'ðŸ‡ªðŸ‡¸', 'ET': 'ðŸ‡ªðŸ‡¹', 'FI': 'ðŸ‡«ðŸ‡®', 'FJ': 'ðŸ‡«ðŸ‡¯', 'FK': 'ðŸ‡«ðŸ‡°', 'FM': 'ðŸ‡«ðŸ‡²', 'FO': 'ðŸ‡«ðŸ‡´', 
  'FR': 'ðŸ‡«ðŸ‡·', 'GA': 'ðŸ‡¬ðŸ‡¦', 'GB': 'ðŸ‡¬ðŸ‡§', 'GD': 'ðŸ‡¬ðŸ‡©', 'GE': 'ðŸ‡¬ðŸ‡ª', 'GF': 'ðŸ‡¬ðŸ‡«', 'GG': 'ðŸ‡¬ðŸ‡¬', 'GH': 'ðŸ‡¬ðŸ‡­', 
  'GI': 'ðŸ‡¬ðŸ‡®', 'GL': 'ðŸ‡¬ðŸ‡±', 'GM': 'ðŸ‡¬ðŸ‡²', 'GN': 'ðŸ‡¬ðŸ‡³', 'GP': 'ðŸ‡¬ðŸ‡µ', 'GQ': 'ðŸ‡¬ðŸ‡¶', 'GR': 'ðŸ‡¬ðŸ‡·', 'GS': 'ðŸ‡¬ðŸ‡¸', 
  'GT': 'ðŸ‡¬ðŸ‡¹', 'GU': 'ðŸ‡¬ðŸ‡º', 'GW': 'ðŸ‡¬ðŸ‡¼', 'GY': 'ðŸ‡¬ðŸ‡¾', 'HK': 'ðŸ‡­ðŸ‡°', 'HM': 'ðŸ‡­ðŸ‡²', 'HN': 'ðŸ‡­ðŸ‡³', 'HR': 'ðŸ‡­ðŸ‡·', 
  'HT': 'ðŸ‡­ðŸ‡¹', 'HU': 'ðŸ‡­ðŸ‡º', 'ID': 'ðŸ‡®ðŸ‡©', 'IE': 'ðŸ‡®ðŸ‡ª', 'IL': 'ðŸ‡®ðŸ‡±', 'IM': 'ðŸ‡®ðŸ‡²', 'IN': 'ðŸ‡®ðŸ‡³', 'IO': 'ðŸ‡®ðŸ‡´', 
  'IQ': 'ðŸ‡®ðŸ‡¶', 'IR': 'ðŸ‡®ðŸ‡·', 'IS': 'ðŸ‡®ðŸ‡¸', 'IT': 'ðŸ‡®ðŸ‡¹', 'JE': 'ðŸ‡¯ðŸ‡ª', 'JM': 'ðŸ‡¯ðŸ‡²', 'JO': 'ðŸ‡¯ðŸ‡´', 'JP': 'ðŸ‡¯ðŸ‡µ', 
  'KE': 'ðŸ‡°ðŸ‡ª', 'KG': 'ðŸ‡°ðŸ‡¬', 'KH': 'ðŸ‡°ðŸ‡­', 'KI': 'ðŸ‡°ðŸ‡®', 'KM': 'ðŸ‡°ðŸ‡²', 'KN': 'ðŸ‡°ðŸ‡³', 'KP': 'ðŸ‡°ðŸ‡µ', 'KR': 'ðŸ‡°ðŸ‡·', 
  'KW': 'ðŸ‡°ðŸ‡¼', 'KY': 'ðŸ‡°ðŸ‡¾', 'KZ': 'ðŸ‡°ðŸ‡¿', 'LA': 'ðŸ‡±ðŸ‡¦', 'LB': 'ðŸ‡±ðŸ‡§', 'LC': 'ðŸ‡±ðŸ‡¨', 'LI': 'ðŸ‡±ðŸ‡®', 'LK': 'ðŸ‡±ðŸ‡°', 
  'LR': 'ðŸ‡±ðŸ‡·', 'LS': 'ðŸ‡±ðŸ‡¸', 'LT': 'ðŸ‡±ðŸ‡¹', 'LU': 'ðŸ‡±ðŸ‡º', 'LV': 'ðŸ‡±ðŸ‡»', 'LY': 'ðŸ‡±ðŸ‡¾', 'MA': 'ðŸ‡²ðŸ‡¦', 'MC': 'ðŸ‡²ðŸ‡¨', 
  'MD': 'ðŸ‡²ðŸ‡©', 'ME': 'ðŸ‡²ðŸ‡ª', 'MF': 'ðŸ‡²ðŸ‡«', 'MG': 'ðŸ‡²ðŸ‡¬', 'MH': 'ðŸ‡²ðŸ‡­', 'MK': 'ðŸ‡²ðŸ‡°', 'ML': 'ðŸ‡²ðŸ‡±', 'MM': 'ðŸ‡²ðŸ‡²', 
  'MN': 'ðŸ‡²ðŸ‡³', 'MO': 'ðŸ‡²ðŸ‡´', 'MP': 'ðŸ‡²ðŸ‡µ', 'MQ': 'ðŸ‡²ðŸ‡¶', 'MR': 'ðŸ‡²ðŸ‡·', 'MS': 'ðŸ‡²ðŸ‡¸', 'MT': 'ðŸ‡²ðŸ‡¹', 'MU': 'ðŸ‡²ðŸ‡º', 
  'MV': 'ðŸ‡²ðŸ‡»', 'MW': 'ðŸ‡²ðŸ‡¼', 'MX': 'ðŸ‡²ðŸ‡½', 'MY': 'ðŸ‡²ðŸ‡¾', 'MZ': 'ðŸ‡²ðŸ‡¿', 'NA': 'ðŸ‡³ðŸ‡¦', 'NC': 'ðŸ‡³ðŸ‡¨', 'NE': 'ðŸ‡³ðŸ‡ª', 
  'NF': 'ðŸ‡³ðŸ‡«', 'NG': 'ðŸ‡³ðŸ‡¬', 'NI': 'ðŸ‡³ðŸ‡®', 'NL': 'ðŸ‡³ðŸ‡±', 'NO': 'ðŸ‡³ðŸ‡´', 'NP': 'ðŸ‡³ðŸ‡µ', 'NR': 'ðŸ‡³ðŸ‡·', 'NU': 'ðŸ‡³ðŸ‡º', 
  'NZ': 'ðŸ‡³ðŸ‡¿', 'OM': 'ðŸ‡´ðŸ‡²', 'PA': 'ðŸ‡µðŸ‡¦', 'PE': 'ðŸ‡µðŸ‡ª', 'PF': 'ðŸ‡µðŸ‡«', 'PG': 'ðŸ‡µðŸ‡¬', 'PH': 'ðŸ‡µðŸ‡­', 'PK': 'ðŸ‡µðŸ‡°', 
  'PL': 'ðŸ‡µðŸ‡±', 'PM': 'ðŸ‡µðŸ‡²', 'PN': 'ðŸ‡µðŸ‡³', 'PR': 'ðŸ‡µðŸ‡·', 'PS': 'ðŸ‡µðŸ‡¸', 'PT': 'ðŸ‡µðŸ‡¹', 'PW': 'ðŸ‡µðŸ‡¼', 'PY': 'ðŸ‡µðŸ‡¾', 
  'QA': 'ðŸ‡¶ðŸ‡¦', 'RE': 'ðŸ‡·ðŸ‡ª', 'RO': 'ðŸ‡·ðŸ‡´', 'RS': 'ðŸ‡·ðŸ‡¸', 'RU': 'ðŸ‡·ðŸ‡º', 'RW': 'ðŸ‡·ðŸ‡¼', 'SA': 'ðŸ‡¸ðŸ‡¦', 'SB': 'ðŸ‡¸ðŸ‡§', 
  'SC': 'ðŸ‡¸ðŸ‡¨', 'SD': 'ðŸ‡¸ðŸ‡©', 'SE': 'ðŸ‡¸ðŸ‡ª', 'SG': 'ðŸ‡¸ðŸ‡¬', 'SH': 'ðŸ‡¸ðŸ‡­', 'SI': 'ðŸ‡¸ðŸ‡®', 'SJ': 'ðŸ‡¸ðŸ‡¯', 'SK': 'ðŸ‡¸ðŸ‡°', 
  'SL': 'ðŸ‡¸ðŸ‡±', 'SM': 'ðŸ‡¸ðŸ‡²', 'SN': 'ðŸ‡¸ðŸ‡³', 'SO': 'ðŸ‡¸ðŸ‡´', 'SR': 'ðŸ‡¸ðŸ‡·', 'SS': 'ðŸ‡¸ðŸ‡¸', 'ST': 'ðŸ‡¸ðŸ‡¹', 'SV': 'ðŸ‡¸ðŸ‡»', 
  'SX': 'ðŸ‡¸ðŸ‡½', 'SY': 'ðŸ‡¸ðŸ‡¾', 'SZ': 'ðŸ‡¸ðŸ‡¿', 'TC': 'ðŸ‡¹ðŸ‡¨', 'TD': 'ðŸ‡¹ðŸ‡©', 'TF': 'ðŸ‡¹ðŸ‡«', 'TG': 'ðŸ‡¹ðŸ‡¬', 'TH': 'ðŸ‡¹ðŸ‡­', 
  'TJ': 'ðŸ‡¹ðŸ‡¯', 'TK': 'ðŸ‡¹ðŸ‡°', 'TL': 'ðŸ‡¹ðŸ‡±', 'TM': 'ðŸ‡¹ðŸ‡²', 'TN': 'ðŸ‡¹ðŸ‡³', 'TO': 'ðŸ‡¹ðŸ‡´', 'TR': 'ðŸ‡¹ðŸ‡·', 'TT': 'ðŸ‡¹ðŸ‡¹', 
  'TV': 'ðŸ‡¹ðŸ‡»', 'TW': 'ðŸ‡¹ðŸ‡¼', 'TZ': 'ðŸ‡¹ðŸ‡¿', 'UA': 'ðŸ‡ºðŸ‡¦', 'UG': 'ðŸ‡ºðŸ‡¬', 'UK': 'ðŸ‡¬ðŸ‡§', 'US': 'ðŸ‡ºðŸ‡¸', 'UY': 'ðŸ‡ºðŸ‡¾', 
  'UZ': 'ðŸ‡ºðŸ‡¿', 'VA': 'ðŸ‡»ðŸ‡¦', 'VC': 'ðŸ‡»ðŸ‡¨', 'VE': 'ðŸ‡»ðŸ‡ª', 'VG': 'ðŸ‡»ðŸ‡¬', 'VI': 'ðŸ‡»ðŸ‡®', 'VN': 'ðŸ‡»ðŸ‡³', 'VU': 'ðŸ‡»ðŸ‡º', 
  'WF': 'ðŸ‡¼ðŸ‡«', 'WS': 'ðŸ‡¼ðŸ‡¸', 'YE': 'ðŸ‡¾ðŸ‡ª', 'YT': 'ðŸ‡¾ðŸ‡¹', 'ZA': 'ðŸ‡¿ðŸ‡¦', 'ZM': 'ðŸ‡¿ðŸ‡²', 'ZW': 'ðŸ‡¿ðŸ‡¼'
};

interface ArtistDetailsProps {
  artist: ArtistWithDetails;
  isGuess?: boolean;
}

export default function ArtistDetails({ artist, isGuess = false }: ArtistDetailsProps) {
  // Set default values with better display handling
  const debut = artist.debutYear ? artist.debutYear : 'â€”';
  
  // Handle members display - show actual number for groups, "Solo" for individuals
  let members = 'Solo';
  if (artist.members) {
    if (artist.members > 1) {
      members = artist.members.toString();
    }
  } else if (artist.gender === 'Group') {
    members = '2+'; // Default for groups without specific member count
  }
  
  // Format popularity as a rank (higher is better)
  const popularity = artist.popularity 
    ? `#${artist.popularity}` 
    : 'â€”';
  
  // Normalize gender display value with consistent capitalization
  let gender = 'Unknown';
  if (artist.gender) {
    const normalizedGender = artist.gender.toLowerCase();
    if (normalizedGender === 'group' || normalizedGender === 'band') {
      gender = 'Group';
    } else if (normalizedGender === 'male') {
      gender = 'Male';
    } else if (normalizedGender === 'female') {
      gender = 'Female';
    } else if (normalizedGender === 'other') {
      gender = 'Other';
    }
  }
  
  // Format genre with proper capitalization
  const genre = artist.genres && artist.genres.length > 0 
    ? artist.genres[0]
        .split(' ')
        .map(word => word.charAt(0).toUpperCase() + word.slice(1))
        .join(' ')
    : 'Pop'; // Default to Pop as a fallback
  
  // Get country code and flag
  const country = artist.country || '';
  const countryFlag = countryFlags[country] || '';
  
  // Map country codes to full country names for better display
  const countryNames: Record<string, string> = {
    'US': 'USA', 'UK': 'UK', 'CA': 'Canada', 'AU': 'Australia', 'SE': 'Sweden',
    'KR': 'South Korea', 'JP': 'Japan', 'BR': 'Brazil', 'FR': 'France', 'DE': 'Germany',
    'ES': 'Spain', 'IT': 'Italy', 'NL': 'Netherlands', 'NO': 'Norway', 'DK': 'Denmark',
    'FI': 'Finland', 'IE': 'Ireland', 'NZ': 'New Zealand', 'MX': 'Mexico', 'AR': 'Argentina',
    'CO': 'Colombia', 'CL': 'Chile', 'PE': 'Peru', 'PT': 'Portugal', 'IS': 'Iceland',
    'IN': 'India', 'CN': 'China', 'RU': 'Russia', 'ZA': 'South Africa'
  };
  
  const countryName = country && countryNames[country] ? countryNames[country] : country;

  return (
    <div className="flex flex-col items-center w-full max-w-md mx-auto">
      {/* Artist image and name */}
      <div className="flex flex-col items-center mb-4">
        <div className="w-24 h-24 rounded-full overflow-hidden mb-3">
          {artist.imageUrl ? (
            <img src={artist.imageUrl} alt={artist.name} className="w-full h-full object-cover" />
          ) : (
            <div className="w-full h-full bg-gray-700 flex items-center justify-center">
              <span className="text-xl font-bold text-white">{artist.name.charAt(0)}</span>
            </div>
          )}
        </div>
        <h2 className="text-2xl font-bold text-white">{artist.name}</h2>
      </div>

      {/* Artist details grid */}
      <div className="grid grid-cols-3 gap-3 w-full">
        {/* Debut */}
        <div className="bg-gray-800 rounded-lg p-3 flex flex-col items-center">
          <span className="text-gray-400 text-sm mb-1">Debut</span>
          <span className="text-white text-xl font-semibold">{debut}</span>
        </div>

        {/* Members */}
        <div className="bg-gray-800 rounded-lg p-3 flex flex-col items-center">
          <span className="text-gray-400 text-sm mb-1">Members</span>
          <span className="text-white text-xl font-semibold">{members}</span>
        </div>

        {/* Popularity */}
        <div className="bg-gray-800 rounded-lg p-3 flex flex-col items-center">
          <span className="text-gray-400 text-sm mb-1">Popularity</span>
          <span className="text-white text-xl font-semibold">{popularity}</span>
        </div>

        {/* Gender */}
        <div className="bg-green-800 bg-opacity-50 rounded-lg p-3 flex flex-col items-center">
          <span className="text-gray-300 text-sm mb-1">Gender</span>
          <span className="text-white text-xl font-semibold">{gender}</span>
        </div>

        {/* Genre */}
        <div className="bg-gray-800 rounded-lg p-3 flex flex-col items-center">
          <span className="text-gray-400 text-sm mb-1">Genre</span>
          <span className="text-white text-xl font-semibold">{genre}</span>
        </div>

        {/* Country */}
        <div className="bg-gray-800 rounded-lg p-3 flex flex-col items-center">
          <span className="text-gray-400 text-sm mb-1">Country</span>
          <div className="flex flex-col items-center">
            {countryFlag && (
              <span className="text-2xl mb-1">{countryFlag}</span>
            )}
            <span className="text-white text-lg font-semibold">{countryName || 'â€”'}</span>
          </div>
        </div>
      </div>
    </div>
  );
}